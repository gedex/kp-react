{"version":3,"sources":["components/Table/top-bar.js","components/Table/utils.js","components/Table/cells/number.js","components/Table/cells/percentage.js","components/Table/columns/pileg.js","components/Table/columns/index.js","components/Table/columns/tps.js","components/Table/columns/pilpres.js","components/Table/columns/tps-count.js","components/Table/columns/tps-count-list.js","components/Table/columns/tps-photos.js","components/Table/columns/tps-detail.js","components/Table/index.js","components/App/index.js","index.js"],"names":["TopBar","state","menuActive","parentsActive","toggleMenu","_this","setState","_ref","toggleParents","_ref2","react_default","a","createElement","index_es","Item","fill","size","_this2","this","title","items","props","parents","map","parent","onAction","getParents","parentsActivator","disabled","length","icon","onClick","active","activator","onClose","preferredAlignment","sections","menuActivator","fullHeight","_this$props","loading","name","parentsPopover","getParentsPopover","skeleton","className","fullWidth","outline","monochrome","Component","rowKeys","candidateKeys","partyKeys","isTpsData","apiResponse","children","prepareRows","dataType","tps","rows","parentIds","parentNames","data","forEach","child","locationId","locationName","id","totalKpu","dpt","dpt_1","dpt_2","_child","Object","slicedToArray","_child2","detail","photos","sum","url","concat","row","objectSpread","push","k","Number","isInteger","_row","pas1","pas2","cakupan","pending","error","tpsTerproses","pasAdded","pas1Win","pas2Win","pas1Percentage","pas2Percentage","tpsTerprosesPercentage","cakupanPercentage","pendingPercentage","errorPercentage","pilpres","pileg","keys","_row$photos$url","c1","photoType","type","prepareRow","index","content","reverse","formatNumber","x","toLocaleString","CellNumber","number","badge","status","CellPercentage","itemClassName","classNames","winner","numeric","percentage","caption","progress","maximumFractionDigits","getPilegColumns","total","thColClass","th-col","thColNumericClass","totalRanks","partyRanks","slice","sort","b","party","rankParties","partyCells","accessor","label","Header","Footer","Cell","value","minWidth","original","toConsumableArray","getColumns","isTps","expander","Expander","isExpanded","width","getTpsColumns","candidateCells","getPilpresColumns","tpsKeyLabels","assign","apply","sah","pSah","tSah","pTSah","jum","key","defineProperty","TpsCountResult","_ref4","filteredKeys","filter","TpsCountList","tables","tableKeys","tpsPhotoDetail","TpsPhotos","_ref3","photo","external","source","TpsDetail","_row$original","reportUrl","tpsId","parentName","hash","getReportTpsUrl","modUrl","getModUrl","Section","segmented","Table","totalColumns","Array","partyKey","getTotalRows","columns","lines","top_bar_TopBar","es","showPagination","pageSize","style","maxHeight","SubComponent","Wrapper","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onHashChange","bind","assertThisInitialized","path","hashToState","fetchData","window","addEventListener","removeEventListener","fetch","Date","getTime","then","response","json","catch","_this$state","App_Wrapper","components_Table","_hash$split","location","substring","split","_hash$split2","parseInt","isNaN","history","replaceState","document","pathname","ReactDOM","render","components_App","getElementById"],"mappings":"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","file":"static/js/main.d633b7da.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {\n\tActionList,\n\tButton,\n\tFormLayout,\n\tPopover,\n\tSkeletonDisplayText,\n\tStack,\n} from '@shopify/polaris'\n\nexport default class TopBar extends Component {\n\tstate = {\n\t\tmenuActive: false,\n\t\tparentsActive: false,\n\t};\n\n\tskeleton() {\n\t\treturn (\n\t\t\t<Stack>\n\t\t\t\t<Stack.Item fill>\n\t\t\t\t\t<SkeletonDisplayText size=\"small\" />\n\t\t\t\t</Stack.Item>\n\t\t\t\t<Stack.Item fill>\n\t\t\t\t\t<SkeletonDisplayText size=\"small\" />\n\t\t\t\t</Stack.Item>\n\t\t\t\t<Stack.Item fill>\n\t\t\t\t\t<SkeletonDisplayText size=\"small\" />\n\t\t\t\t</Stack.Item>\n\t\t\t</Stack>\n\t\t)\n\t}\n\n\ttoggleMenu = () => {\n\t\tthis.setState( ( { menuActive } ) => {\n\t\t\treturn { menuActive: !menuActive }\n\t\t} )\n\t}\n\n\ttoggleParents = () => {\n\t\tthis.setState( ( { parentsActive } ) => {\n\t\t\treturn { parentsActive: !parentsActive }\n\t\t} )\n\t}\n\n\t\n\tgetParents() {\n\t\treturn [\n\t\t\t{\n\t\t\t\ttitle: 'Kembali ke',\n\t\t\t\titems: this.props.parents.map( parent => {\n\t\t\t\t\tparent.onAction = this.toggleParents\n\t\t\t\t\treturn parent\n\t\t\t\t} ),\n\t\t\t}\n\t\t]\n\t}\n\n\tgetParentsPopover() {\n\t\tconst { parentsActive } = this.state\n\t\tconst parents = this.getParents()\n\t\tconst parentsActivator = (\n\t\t\t<Button\n\t\t\t\tdisabled={ ! parents[ 0 ].items.length }\n\t\t\t\ticon={ parentsActive ? 'chevronDown' : 'chevronLeft' }\n\t\t\t\tonClick={ this.toggleParents }\n\t\t\t/>\n\t\t)\n\n\t\treturn (\n\t\t\t<Popover\n\t\t\t\tactive={ parentsActive }\n\t\t\t\tactivator={ parentsActivator }\n\t\t\t\tonClose={ this.toggleParents }\n\t\t\t\tpreferredAlignment={ 'left' }\n\t\t\t>\n\t\t\t\t<ActionList\n\t\t\t\t\tsections={ parents }\n\t\t\t\t/>\n\t\t\t</Popover>\n\t\t)\n\t}\n\n\t// TODO: Should be Autocomplete component to static wilayah.json\n\tgetSearchPopover() {\n\t\tconst { menuActive } = this.state\n\t\tconst menuActivator = (\n\t\t\t<Button\n\t\t\t\ticon={ menuActive ? 'chevronDown' : 'search' }\n\t\t\t\tonClick={ this.toggleMenu }\n\t\t\t\tdisabled\n\t\t\t/>\n\t\t)\n\n\t\treturn (\n\t\t\t<Popover\n\t\t\t\tactive={ menuActive }\n\t\t\t\tactivator={ menuActivator }\n\t\t\t\tonClose={ this.toggleMenu }\n\t\t\t\tpreferredAlignment={ 'right' }\n\t\t\t\tfullHeight\n\t\t\t>\n\t\t\t\t<FormLayout>\n\t\t\t\t</FormLayout>\n\t\t\t</Popover>\n\t\t)\n\t}\n\n\trender() {\n\t\tconst { loading, name } = this.props\n\t\t//const searchPopover = this.getSearchPopover()\n\t\tconst parentsPopover = this.getParentsPopover()\n\n\t\treturn loading ?\n\t\t\t(\n\t\t\t\tthis.skeleton()\n\t\t\t)\n\t\t\t:\n\t\t\t(\n\t\t\t\t<div className=\"table-control\">\n\t\t\t\t\t<Stack>\n\t\t\t\t\t\t<Stack.Item>\n\t\t\t\t\t\t\t{ parentsPopover }\n\t\t\t\t\t\t</Stack.Item>\n\t\t\t\t\t\t<Stack.Item fill>\n\t\t\t\t\t\t\t<div className=\"location-name\">\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t\t\toutline\n\t\t\t\t\t\t\t\t\tmonochrome\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ name }\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Stack.Item>\n\t\t\t\t\t</Stack>\n\t\t\t\t</div>\n\t\t\t)\n\t}\n}\n","// Order doesn't matter.\nconst rowKeys = [\n\t'ber',\n\t'cakupan',\n\t'dem',\n\t'error',\n\t'gar',\n\t'ger',\n\t'gol',\n\t'han',\n\t'janggal',\n\t'nas',\n\t'pJum',\n\t'pSah',\n\t'pTSah',\n\t'pa',\n\t'pan',\n\t'pas1',\n\t'pas2',\n\t'pbb',\n\t'pda',\n\t'pdi',\n\t'pending',\n\t'per',\n\t'pkb',\n\t'pkp',\n\t'pna',\n\t'ppp',\n\t'ps',\n\t'psi',\n\t'sah',\n\t'sej',\n\t'tSah',\n]\n\n// Don't alter the order.\nconst candidateKeys = [\n\t[ 'pas1', '01' ],\n\t[ 'pas2', '02' ],\n]\n\n// Don't alter the order.\nconst partyKeys = [\n\t[ 'pkb', 'PKB' ],\n\t[ 'ger', 'Gerindra' ],\n\t[ 'pdi', 'PDI' ],\n\t[ 'gol', 'Golkar' ],\n\t[ 'nas', 'Nasdem' ],\n\t[ 'gar', 'Garuda' ],\n\t[ 'ber', 'Berkarya' ],\n\t[ 'sej', 'PKS' ],\n\t[ 'per', 'Perindo' ],\n\t[ 'ppp', 'PPP' ],\n\t[ 'psi', 'PSI' ],\n\t[ 'pan', 'PAN' ],\n\t[ 'han', 'Hanura' ],\n\t[ 'dem', 'Demokrat' ],\n\t[ 'pa', 'PA' ],\n\t[ 'ps', 'PS' ],\n\t[ 'pda', 'PDA' ],\n\t[ 'pna', 'PNA' ],\n\t[ 'pbb', 'PBB' ],\n\t[ 'pkp', 'PKP' ],\n]\n\nfunction isTpsData( apiResponse ) {\n\tif ( ! apiResponse ) {\n\t\treturn false\n\t}\n\tconst { children } = apiResponse\n\tif ( ! children || ! children[ 0 ] ) {\n\t\treturn false\n\t}\n\treturn children[ 0 ].length === 3\n}\n\nfunction prepareRows( dataType, apiResponse ) {\n\tconst tps = isTpsData( apiResponse )\n\n\tlet rows = []\n\tif ( ! apiResponse ) {\n\t\treturn rows\n\t}\n\n\tconst { children, parentIds, parentNames } = apiResponse\n\tlet { data } = apiResponse \n\tdata = data || []\n\n\tchildren.forEach( child => {\n\t\tlet locationId = 0\n\t\tlet locationName = ''\n\t\tlet id = 0\n\t\tlet name = ''\n\t\tlet totalKpu = 0\n\t\tlet dpt = 0\n\t\tlet dpt_1 = 0\n\t\tlet dpt_2 = 0\n\n\t\tif ( tps ) {\n\t\t\t[ name, dpt_1, dpt_2 ] = child\n\t\t\tlocationId = apiResponse.id\n\t\t\tlocationName = apiResponse.name\n\t\t\tid = name\n\t\t\tdpt = dpt_1 + dpt_2\n\t\t} else {\n\t\t\t[ id, name, totalKpu ] = child\n\t\t\tlocationId = id\n\t\t\tlocationName = name\n\t\t}\n\n\t\tconst detail = data[ id ] || {}\n\t\tconst photos = detail.photos || {}\n\t\tconst sum = detail.sum || {}\n\t\tconst url = `#${ dataType }:${ id }`\n\t\tconst row = {\n\t\t\tid,\n\t\t\tname,\n\t\t\tlocationId,\n\t\t\tlocationName,\n\t\t\turl,\n\t\t\ttotalKpu,\n\t\t\tdpt,\n\t\t\tphotos,\n\t\t\tdataType,\n\t\t\tparentIds,\n\t\t\tparentNames,\n\t\t\t...sum,\n\t\t}\n\n\t\trows.push( prepareRow( row ) )\n\t} )\n\n\treturn rows\n}\n\nfunction prepareRow( row ) {\n\trowKeys.forEach( k => {\n\t\tif ( ! Number.isInteger( row[ k ] ) ) {\n\t\t\trow[ k ] = 0\n\t\t}\n\t} )\n\n\tconst { pas1, pas2, cakupan, pending, totalKpu, error } = row\n\tconst tpsTerproses = cakupan - pending\n\tconst pasAdded = pas1 + pas2\n\tconst pas1Win = pas1 > pas2\n\tconst pas2Win = pas2 > pas1\n\n\tlet pas1Percentage = 0\n\tlet pas2Percentage = 0\n\tlet tpsTerprosesPercentage = 0\n\tlet cakupanPercentage = 0\n\tlet pendingPercentage = 0\n\tlet errorPercentage = 0\n\n\tif ( pas1 > 0 ) {\n\t\tpas1Percentage = ( pas1 / pasAdded ) * 100\n\t}\n\tif ( pas2 > 0 ) {\n\t\tpas2Percentage = ( pas2 / pasAdded ) * 100\n\t}\n\tif ( totalKpu > 0 ) {\n\t\ttpsTerprosesPercentage = ( tpsTerproses / totalKpu ) * 100\n\t\tcakupanPercentage = ( cakupan / totalKpu ) * 100\n\t}\n\tif ( cakupan ) {\n\t\tpendingPercentage = ( pending / cakupan ) * 100\n\t}\n\tif ( cakupan ) {\n\t\terrorPercentage = ( error / cakupan ) * 100\n\t}\n\n\tconst photos = {\n\t\tpilpres: [],\n\t\tpileg: [],\n\t}\n\tObject.keys( row.photos ).forEach( url => {\n\t\tlet { c1, sum } = row.photos[ url ]\n\t\tc1 = c1 || {}\n\t\tsum = sum || {}\n\t\tconst photoType = 1 === c1.type ? 'pilpres' : 'pileg'\n\t\tphotos[ photoType ].push( { url, ...c1, ...sum } )\n\t} )\n\n\trow = {\n\t\t...row,\n\t\tpasAdded,\n\t\tpas1Win,\n\t\tpas2Win,\n\t\tpas1Percentage,\n\t\tpas2Percentage,\n\t\ttpsTerproses,\n\t\ttpsTerprosesPercentage,\n\t\tcakupanPercentage,\n\t\tpendingPercentage,\n\t\terrorPercentage,\n\t\tphotos,\n\t}\n\n\treturn row\n}\n\nfunction getTotalRows( rows ) {\n\tlet total = {\n\t\tpas1: 0,\n\t\tpas1Win: false,\n\t\tpas1Percentage: 0,\n\t\tpas2: 0,\n\t\tpas2Win: false,\n\t\tpas2Percentage: 0,\n\t\ttpsTerproses: 0,\n\t\ttpsTerprosesPercentage: 0,\n\t\ttotalKpu: 0,\n\t\tsah: 0,\n\t\ttSah: 0,\n\t\tcakupan: 0,\n\t\tcakupanPercentage: 0,\n\t\tpending: 0,\n\t\tpendingPercentage: 0,\n\t\terror: 0,\n\t\terrorPercentage: 0,\n\t}\n\n\tpartyKeys.forEach( ( [ partyKey ] ) => {\n\t\ttotal[ partyKey ] = 0\n\t} )\n\n\tif ( ! rows ) {\n\t\treturn total\n\t}\n\n\trows.forEach( row => {\n\t\ttotal.pas1 += row.pas1\n\t\ttotal.pas2 += row.pas2\n\t\ttotal.totalKpu += row.totalKpu\n\t\ttotal.tpsTerproses += row.tpsTerproses\n\t\ttotal.sah += row.sah\n\t\ttotal.tSah += row.tSah\n\t\ttotal.cakupan += row.cakupan\n\t\ttotal.pending += row.pending\n\t\ttotal.error += row.error\n\n\t\tpartyKeys.forEach( ( [ partyKey ] ) => {\n\t\t\ttotal[ partyKey ] += row[ partyKey ]\n\t\t} )\n\t} )\n\n\ttotal.pas1Win = total.pas1 > total.pas2\n\ttotal.pas2Win = total.pas2 > total.pas1\n\n\tif ( total.pas1 > 0 ) {\n\t\ttotal.pas1Percentage = ( total.pas1 / ( total.pas1 + total.pas2 ) ) * 100\n\t}\n\n\tif ( total.pas2 > 0 ) {\n\t\ttotal.pas2Percentage = ( total.pas2 / ( total.pas1 + total.pas2 ) ) * 100\n\t}\n\n\tif ( total.totalKpu > 0 ) {\n\t\ttotal.tpsTerprosesPercentage = ( total.tpsTerproses / total.totalKpu ) * 100\n\t\ttotal.cakupanPercentage = ( total.cakupan / total.totalKpu ) * 100\n\t}\n\n\tif ( total.cakupan > 0 ) {\n\t\ttotal.pendingPercentage = ( total.pending / total.cakupan ) * 100\n\t\ttotal.errorPercentage = ( total.error / total.cakupan ) * 100\n\t}\n\n\treturn total\n}\n\nfunction getParents( dataType, apiResponse ) {\n\tif ( ! apiResponse ) {\n\t\treturn []\n\t}\n\n\tconst { parentIds, parentNames } = apiResponse\n\tif ( ! parentIds || parentIds.length <= 0 ) {\n\t\treturn []\n\t}\n\n\treturn parentIds.map( ( id, index ) => {\n\t\tconst url = `#${ dataType }:${ id }`\n\t\tconst content = parentNames[ index ]\n\t\treturn {\n\t\t\tid,\n\t\t\turl,\n\t\t\tcontent,\n\t\t}\n\t} ).reverse()\n}\n\nfunction formatNumber( x ) {\n\treturn x.toLocaleString( 'id-ID' )\n}\n\nfunction formatPercentage( x ) {\n\treturn x.toLocaleString( 'id-ID', { maximumFractionDigits: 2 } ) + '%'\n}\n\nfunction rankParties( data ) {\n\tconst partyRanks = {}\n\n\tpartyKeys.slice( 0 ).sort( ( a, b ) => (\n\t\tdata[ b[ 0 ] ] - data[ a[ 0 ] ]\n\t) ).forEach( ( party, index ) => {\n\t\tpartyRanks[ party[ 0 ] ] = index + 1\n\t} )\n\n\treturn partyRanks\n}\n\nfunction getReportTpsUrl( locationId, tpsId, dataType, parentName, locationName ) {\n\tconst hash = `${ dataType }:${ locationId }`\n\treturn 'https://docs.google.com/forms/d/e/1FAIpQLSdeoAqXjE-gd_YpsvpzeD1Cr21hWgwKM8MHS8CYXNajD6iKGA/viewform?usp=pp_url' +\n\t\t`&entry.1587204645=${ hash }` +\n\t\t`&entry.446975413=${ tpsId }` +\n\t\t`&entry.828908754=${ dataType }` +\n\t\t`&entry.1325772197=${ parentName }` +\n\t\t`&entry.789113286=${ locationName }`\n}\n\nfunction getModUrl( locationId, tpsId ) {\n\treturn `https://upload.kawalpemilu.org/t/${ locationId }/${ tpsId }?utm_source=wwwkp`\n}\n\nexport {\n\tcandidateKeys,\n\tformatNumber,\n\tformatPercentage,\n\tgetModUrl,\n\tgetParents,\n\tgetReportTpsUrl,\n\tgetTotalRows,\n\tisTpsData,\n\tpartyKeys,\n\tprepareRows,\n\trankParties,\n\trowKeys,\n}\n","import React from 'react'\nimport {\n\tBadge,\n\tDisplayText,\n\tTooltip,\n} from '@shopify/polaris'\n\n\nimport { formatNumber } from '../utils'\n\nexport default function CellNumber( { number, badge } ) {\n\treturn (\n\t\t<div className={ 'numeric' }>\n\t\t\t<DisplayText size=\"small\">\n\t\t\t\t{ formatNumber( number ) }\n\t\t\t</DisplayText>\n\t\t\t{\n\t\t\t\tbadge && number > 0 ?\n\t\t\t\t\t(\n\t\t\t\t\t\t<Tooltip content={ `Urutan #${ badge } dalam perolehan suara` }>\n\t\t\t\t\t\t\t<Badge status={ badge === 1 ? 'success' : 'info' }>{ badge }</Badge>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t)\n\t\t\t\t\t: null\n\t\t\t}\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport classNames from 'classnames'\nimport {\n\tCaption,\n\tDisplayText,\n\tProgressBar,\n\tTextContainer,\n} from '@shopify/polaris'\n\nimport { formatPercentage } from '../utils'\n\nexport default function CellPercentage( props ) {\n\tconst itemClassName = classNames( {\n\t\twinner: props.winner,\n\t\tnumeric: true,\n\t} )\n\n\tconst { winner, percentage, caption, progress } = props\n\treturn (\n\t\t<div className={ itemClassName }>\n\t\t\t<TextContainer>\n\t\t\t\t<DisplayText size=\"small\">\n\t\t\t\t\t{\n\t\t\t\t\t\twinner ?\n\t\t\t\t\t\t\t'✓ '\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t''\n\t\t\t\t\t}\n\t\t\t\t\t{ formatPercentage( percentage ) }\n\t\t\t\t</DisplayText>\n\t\t\t\t<Caption>{ caption }</Caption>\n\t\t\t\t{\n\t\t\t\t\tprogress ?\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t<ProgressBar progress={ progress } size=\"small\" />\n\t\t\t\t\t\t)\n\t\t\t\t\t\t:\n\t\t\t\t\t\tnull\n\t\t\t\t}\n\t\t\t</TextContainer>\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport classNames from 'classnames'\nimport {\n\tHeading,\n\tLink,\n\tTooltip,\n} from '@shopify/polaris'\n\n\nimport CellNumber from '../cells/number'\nimport CellPercentage from '../cells/percentage'\nimport {\n\tpartyKeys,\n\trankParties,\n\tformatNumber,\n} from '../utils'\n\nexport default function getPilegColumns ( total ) {\n\tconst thColClass = classNames( {\n\t\t'th-col': true,\n\t} )\n\tconst thColNumericClass = classNames( {\n\t\t'th-col': true,\n\t\tnumeric: true,\n\t} )\n\n\tconst totalRanks = rankParties( total )\n\n\t/* TODO: Remove dups in Header and Footer */\n\t/* TODO: Pass list of array without Component in it then map it to be Component-ready */\n\tconst partyCells = partyKeys.map( ( [ accessor, label ] ) => (\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<div className={ 'th-col numeric' }>\n\t\t\t\t\t<Heading>{ label }</Heading>\n\t\t\t\t\t<CellNumber\n\t\t\t\t\t\tnumber={ total[ accessor ] }\n\t\t\t\t\t\tbadge={ totalRanks[ accessor ] }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tFooter: () => (\n\t\t\t\t<div className={ 'th-col numeric' }>\n\t\t\t\t\t<Heading>{ label }</Heading>\n\t\t\t\t\t<CellNumber\n\t\t\t\t\t\tnumber={ total[ accessor ] }\n\t\t\t\t\t\tbadge={ totalRanks[ accessor ] }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\taccessor: accessor,\n\t\t\tCell: row => {\n\t\t\t\treturn (\n\t\t\t\t\t<CellNumber\n\t\t\t\t\t\tnumber={ row.value }\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t},\n\t\t\tminWidth: 116,\n\t\t}\n\t) )\n\n\t/* TODO: Remove dups in Header and Footer */\n\t/* TODO: Pass list of array without Component in it then map it to be Component-ready */\n\treturn [\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<div className={ thColClass }>\n\t\t\t\t\t<Heading>{ 'Wilayah' }</Heading>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tFooter: () => (\n\t\t\t\t<div className={ thColClass }>\n\t\t\t\t\t<Heading>{ 'Wilayah' }</Heading>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\taccessor: 'name',\n\t\t\tCell: row => (\n\t\t\t\t<div className=\"location-link\">\n\t\t\t\t\t<Link\n\t\t\t\t\t\turl={ row.original.url }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ row.value }\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tminWidth: 220,\n\t\t},\n\n\t\t...partyCells,\n\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<Tooltip content={ 'Jumlah TPS total dari data KPU' }>\n\t\t\t\t\t<div className={ thColNumericClass }>\n\t\t\t\t\t\t<Heading>{ 'Total KPU' }</Heading>\n\t\t\t\t\t\t<CellNumber number={ total.totalKpu } />\n\t\t\t\t\t</div>\n\t\t\t\t</Tooltip>\n\t\t\t),\n\t\t\tFooter: () => (\n\t\t\t\t<Tooltip content={ 'Jumlah TPS total dari data KPU' }>\n\t\t\t\t\t<div className={ thColNumericClass }>\n\t\t\t\t\t\t<Heading>{ 'Total KPU' }</Heading>\n\t\t\t\t\t\t<CellNumber number={ total.totalKpu } />\n\t\t\t\t\t</div>\n\t\t\t\t</Tooltip>\n\t\t\t),\n\t\t\taccessor: 'totalKpu',\n\t\t\tCell: row => (\n\t\t\t\t<CellNumber number={ formatNumber( row.value ) } />\n\t\t\t),\n\t\t\tminWidth: 160,\n\t\t},\n\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<Tooltip content={ 'Estimasi jumlah TPS yang sudah memiliki foto dan sudah diproses datanya' }>\n\t\t\t\t\t<div className={ thColNumericClass }>\n\t\t\t\t\t\t<Heading>{ 'Terproses' }</Heading>\n\t\t\t\t\t\t<CellPercentage\n\t\t\t\t\t\t\tpercentage={ total.tpsTerprosesPercentage }\n\t\t\t\t\t\t\tcaption={ `${ formatNumber( total.tpsTerproses ) } / ${ formatNumber( total.totalKpu ) }` }\n\t\t\t\t\t\t\tprogress={ total.tpsTerprosesPercentage }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</Tooltip>\n\t\t\t),\n\t\t\tFooter: () => (\n\t\t\t\t<Tooltip content={ 'Estimasi jumlah TPS yang sudah memiliki foto dan sudah diproses datanya' }>\n\t\t\t\t\t<div className={ thColNumericClass }>\n\t\t\t\t\t\t<Heading>{ 'Terproses' }</Heading>\n\t\t\t\t\t\t<CellPercentage\n\t\t\t\t\t\t\tpercentage={ total.tpsTerprosesPercentage }\n\t\t\t\t\t\t\tcaption={ `${ formatNumber( total.tpsTerproses ) } / ${ formatNumber( total.totalKpu ) }` }\n\t\t\t\t\t\t\tprogress={ total.tpsTerprosesPercentage }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</Tooltip>\n\t\t\t),\n\t\t\taccessor: 'tpsTerprosesPercentage',\n\t\t\tCell: row => (\n\t\t\t\t<CellPercentage\n\t\t\t\t\tpercentage={ row.value }\n\t\t\t\t\tcaption={ `${ formatNumber( row.original.tpsTerproses ) } / ${ formatNumber( row.original.totalKpu ) }` }\n\t\t\t\t\tprogress={ row.value }\n\t\t\t\t/>\n\t\t\t),\n\t\t\tminWidth: 150,\n\t\t},\n\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<Tooltip content={ 'Jumlah TPS dengan foto yang diterima KawalPemilu (termasuk lembar PHP, pileg, dpd, dll)' }>\n\t\t\t\t\t<div className={ thColNumericClass }>\n\t\t\t\t\t\t<Heading>{ 'Dgn Foto' }</Heading>\n\t\t\t\t\t\t<CellPercentage\n\t\t\t\t\t\t\tpercentage={ total.cakupanPercentage }\n\t\t\t\t\t\t\tcaption={ `${ formatNumber( total.cakupan ) } / ${ formatNumber( total.totalKpu ) }` }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</Tooltip>\n\t\t\t),\n\t\t\tFooter: () => (\n\t\t\t\t<Tooltip content={ 'Jumlah TPS dengan foto yang diterima KawalPemilu (termasuk lembar PHP, pileg, dpd, dll)' }>\n\t\t\t\t\t<div className={ thColNumericClass }>\n\t\t\t\t\t\t<Heading>{ 'Dgn Foto' }</Heading>\n\t\t\t\t\t\t<CellPercentage\n\t\t\t\t\t\t\tpercentage={ total.cakupanPercentage }\n\t\t\t\t\t\t\tcaption={ `${ formatNumber( total.cakupan ) } / ${ formatNumber( total.totalKpu ) }` }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</Tooltip>\n\t\t\t),\n\t\t\taccessor: 'cakupanPercentage',\n\t\t\tCell: row => (\n\t\t\t\t<CellPercentage\n\t\t\t\t\tpercentage={ row.value }\n\t\t\t\t\tcaption={ `${ formatNumber( row.original.cakupan ) } / ${ formatNumber( row.original.totalKpu ) }` }\n\t\t\t\t\tprogress={ row.value }\n\t\t\t\t/>\n\t\t\t),\n\t\t\tminWidth: 150,\n\t\t},\n\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<Tooltip content={ 'Jumlah TPS yang memiliki foto yang belum diproses' }>\n\t\t\t\t\t<div className={ thColNumericClass }>\n\t\t\t\t\t\t<Heading>{ 'Belum Terproses' }</Heading>\n\t\t\t\t\t\t<CellPercentage\n\t\t\t\t\t\t\tpercentage={ total.pendingPercentage }\n\t\t\t\t\t\t\tcaption={ `${ formatNumber( total.pending ) } / ${ formatNumber( total.cakupan ) }` }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</Tooltip>\n\t\t\t),\n\t\t\tFooter: () => (\n\t\t\t\t<Tooltip content={ 'Jumlah TPS yang memiliki foto yang belum diproses' }>\n\t\t\t\t\t<div className={ thColNumericClass }>\n\t\t\t\t\t\t<Heading>{ 'Belum Terproses' }</Heading>\n\t\t\t\t\t\t<CellPercentage\n\t\t\t\t\t\t\tpercentage={ total.pendingPercentage }\n\t\t\t\t\t\t\tcaption={ `${ formatNumber( total.pending ) } / ${ formatNumber( total.cakupan ) }` }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</Tooltip>\n\t\t\t),\n\t\t\taccessor: 'pending',\n\t\t\tCell: row => (\n\t\t\t\t<CellPercentage\n\t\t\t\t\tpercentage={ row.original.pendingPercentage }\n\t\t\t\t\tcaption={ `${ formatNumber( row.value ) } / ${ formatNumber( row.original.cakupan ) }` }\n\t\t\t\t/>\n\t\t\t),\n\t\t\tminWidth: 190,\n\t\t},\n\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<Tooltip content={ 'Jumlah TPS yang memiliki laporan yang belum ditindaklanjuti.' }>\n\t\t\t\t\t<div className={ thColNumericClass }>\n\t\t\t\t\t\t<Heading>{ 'Bermasalah' }</Heading>\n\t\t\t\t\t\t<CellPercentage\n\t\t\t\t\t\t\tpercentage={ total.errorPercentage }\n\t\t\t\t\t\t\tcaption={ `${ formatNumber( total.error ) } / ${ formatNumber( total.cakupan ) }` }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</Tooltip>\n\t\t\t),\n\t\t\tFooter: () => (\n\t\t\t\t<Tooltip content={ 'Jumlah TPS yang memiliki laporan yang belum ditindaklanjuti.' }>\n\t\t\t\t\t<div className={ thColNumericClass }>\n\t\t\t\t\t\t<Heading>{ 'Bermasalah' }</Heading>\n\t\t\t\t\t\t<CellPercentage\n\t\t\t\t\t\t\tpercentage={ total.errorPercentage }\n\t\t\t\t\t\t\tcaption={ `${ formatNumber( total.error ) } / ${ formatNumber( total.cakupan ) }` }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</Tooltip>\n\t\t\t),\n\t\t\taccessor: 'error',\n\t\t\tCell: row => (\n\t\t\t\t<CellPercentage\n\t\t\t\t\tpercentage={ row.original.errorPercentage }\n\t\t\t\t\tcaption={ `${ formatNumber( row.value ) } / ${ formatNumber( row.original.cakupan ) }` }\n\t\t\t\t/>\n\t\t\t),\n\t\t\tminWidth: 160,\n\t\t},\n\t]\n}\n","import React from 'react'\nimport {\n\tSkeletonBodyText,\n} from '@shopify/polaris'\n\nimport getPilpresColumns from './pilpres'\nimport getPilegColumns from './pileg'\nimport getTpsColumns from './tps'\n\nconst getSkeletonColumns = ( totalColumns ) => (\n\t[ ...Array( totalColumns ).keys() ].map( () => (\n\t\t{\n\t\t\tHeader: () => (  <SkeletonBodyText lines={ 1 } /> ),\n\t\t\tCell: () => (  <SkeletonBodyText lines={ 1 } /> ),\n\t\t}\n\t) )\n)\n\nconst getColumns = ( dataType, total, isTps ) =>  {\n\tif ( isTps ) {\n\t\treturn getTpsColumns( dataType, total )\n\t}\n\tif ( 'pilpres' === dataType ) {\n\t\treturn getPilpresColumns( total )\n\t}\n\n\treturn getPilegColumns( total )\n}\n\nexport {\n\tgetColumns,\n\tgetSkeletonColumns,\n}\n","import React from 'react'\nimport {\n\tButton,\n\tCaption,\n\tDisplayText,\n\tHeading,\n} from '@shopify/polaris'\n\nimport CellPercentage from '../cells/percentage'\nimport { formatNumber } from '../utils'\n\nexport default function getTpsColumns( dataType, total ) {\n\t// TODO: remove dupes between here and pilpres.js\n\tconst pilpresCols = [\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<div className={ 'th-col numeric' }>\n\t\t\t\t\t<Heading>{ '01' }</Heading>\n\t\t\t\t\t<CellPercentage\n\t\t\t\t\t\tpercentage={ total.pas1Percentage }\n\t\t\t\t\t\tcaption={ total.pas1 ? formatNumber( total.pas1 ) : false }\n\t\t\t\t\t\twinner={ total.pas1 > total.pas2 }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\taccessor: 'pas1Percentage',\n\t\t\tCell: row => (\n\t\t\t\t<CellPercentage\n\t\t\t\t\tpercentage={ row.value }\n\t\t\t\t\tcaption={ row.original.pas1 ? formatNumber( row.original.pas1 ) : false }\n\t\t\t\t\twinner={ row.original.pas1 > row.original.pas2 }\n\t\t\t\t/>\n\t\t\t),\n\t\t},\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<div className={ 'th-col numeric' }>\n\t\t\t\t\t<Heading>{ '02' }</Heading>\n\t\t\t\t\t<CellPercentage\n\t\t\t\t\t\tpercentage={ total.pas2Percentage }\n\t\t\t\t\t\tcaption={ total.pas2 ? formatNumber( total.pas2 ) : false }\n\t\t\t\t\t\twinner={ total.pas2 > total.pas1 }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\taccessor: 'pas2Percentage',\n\t\t\tCell: row => (\n\t\t\t\t<CellPercentage\n\t\t\t\t\tpercentage={ row.value }\n\t\t\t\t\tcaption={ row.original.pas2 ? formatNumber( row.original.pas2 ) : false }\n\t\t\t\t\twinner={ row.original.pas2 > row.original.pas1 }\n\t\t\t\t/>\n\t\t\t),\n\t\t},\n\t]\n\n\tconst cols = dataType === 'pilpres'\n\t\t? pilpresCols\n\t\t: []\n\n\treturn [\n\t\t{\n\t\t\texpander: true,\n\t\t\tExpander: ( { isExpanded } ) => (\n\t\t\t\t<Button icon={ isExpanded ? 'chevronDown' : 'chevronRight' } />\n\t\t\t),\n\t\t\twidth: 60,\n\t\t},\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<div className={ 'th-col' }>\n\t\t\t\t\t<Heading>{ 'TPS' }</Heading>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\taccessor: 'name',\n\t\t\tCell: row => (\n\t\t\t\t<div className=\"tps-name\">\n\t\t\t\t\t<DisplayText size=\"small\">{ `TPS ${ row.value }` }</DisplayText>\n\t\t\t\t\t<Caption>{ `DPT ${ row.original.dpt }` }</Caption>\n\t\t\t\t</div>\n\t\t\t),\n\t\t},\n\t\t...cols,\n\t]\n}\n","import React from 'react'\nimport classNames from 'classnames'\nimport {\n\tHeading,\n\tLink,\n\tTooltip,\n} from '@shopify/polaris'\n\nimport CellNumber from '../cells/number'\nimport CellPercentage from '../cells/percentage'\nimport { candidateKeys, formatNumber } from '../utils'\n\nexport default function getPilpresColumns( total ) {\n\tconst thColClass = classNames( {\n\t\t'th-col': true,\n\t} )\n\tconst thColNumericClass = classNames( {\n\t\t'th-col': true,\n\t\tnumeric: true,\n\t} )\n\n\t/* TODO: Remove dups in Header and Footer */\n\t/* TODO: Pass list of array without Component in it then map it to be Component-ready */\n\tconst candidateCells = candidateKeys.map( ( [ accessor, label ] ) => (\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<Tooltip content={ `Total suara pasangan ${ label }` }>\n\t\t\t\t\t<div className={ thColNumericClass }>\n\t\t\t\t\t\t<Heading>\n\t\t\t\t\t\t\t{ label }\n\t\t\t\t\t\t</Heading>\n\t\t\t\t\t\t<CellPercentage\n\t\t\t\t\t\t\tpercentage={ total[ `${ accessor }Percentage` ] }\n\t\t\t\t\t\t\tcaption={ total[ accessor ] ? formatNumber( total[ accessor ] ) : false }\n\t\t\t\t\t\t\twinner={ total[ `${ accessor }Win` ] }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</Tooltip>\n\t\t\t),\n\t\t\tFooter: () => (\n\t\t\t\t<Tooltip content={ `Total suara pasangan ${ label }` }>\n\t\t\t\t\t<div className={ thColNumericClass }>\n\t\t\t\t\t\t<Heading>\n\t\t\t\t\t\t\t{ label }\n\t\t\t\t\t\t</Heading>\n\t\t\t\t\t\t<CellPercentage\n\t\t\t\t\t\t\tpercentage={ total[ `${ accessor }Percentage` ] }\n\t\t\t\t\t\t\tcaption={ total[ accessor ] ? formatNumber( total[ accessor ] ) : false }\n\t\t\t\t\t\t\twinner={ total[ `${ accessor }Win` ] }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</Tooltip>\n\t\t\t),\n\t\t\taccessor: 'pas1Percentage',\n\t\t\tCell: row => (\n\t\t\t\t<CellPercentage\n\t\t\t\t\tpercentage={ row.value }\n\t\t\t\t\tcaption={ row.original[ accessor ] ? formatNumber( row.original[ accessor ] ) : false }\n\t\t\t\t\twinner={ row.original[ `${ accessor }Win` ] }\n\t\t\t\t/>\n\t\t\t),\n\t\t}\n\t) )\n\n\t/* TODO: Remove dups in Header and Footer */\n\t/* TODO: Pass list of array without Component in it then map it to be Component-ready */\n\treturn [\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<div className={ thColClass }>\n\t\t\t\t\t<Heading>{ 'Wilayah' }</Heading>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tFooter: () => (\n\t\t\t\t<div className={ thColClass }>\n\t\t\t\t\t<Heading>{ 'Wilayah' }</Heading>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\taccessor: 'name',\n\t\t\tCell: row => (\n\t\t\t\t<div>\n\t\t\t\t\t<Link\n\t\t\t\t\t\turl={ row.original.url }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ row.value }\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t),\n\t\t},\n\n\t\t...candidateCells,\n\n\t\t{\n\t\t\tHeader: () => (\n\t\t\t\t<Tooltip content={ 'Estimasi jumlah TPS yang sudah memiliki foto dan sudah diproses datanya' }>\n\t\t\t\t\t<div className={ thColNumericClass }>\n\t\t\t\t\t\t<Heading>{ 'Terproses' }</Heading>\n\t\t\t\t\t\t<CellPercentage\n\t\t\t\t\t\t\tpercentage={ total.tpsTerprosesPercentage }\n\t\t\t\t\t\t\tcaption={ `${ formatNumber( total.tpsTerproses ) } / ${ formatNumber( total.totalKpu ) }` }\n\t\t\t\t\t\t\tprogress={ total.tpsTerprosesPercentage }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</Tooltip>\n\t\t\t),\n\t\t\tFooter: () => (\n\t\t\t\t<Tooltip content={ 'Estimasi jumlah TPS yang sudah memiliki foto dan sudah diproses datanya' }>\n\t\t\t\t\t<div className={ thColNumericClass }>\n\t\t\t\t\t\t<Heading>{ 'Terproses' }</Heading>\n\t\t\t\t\t\t<CellPercentage\n\t\t\t\t\t\t\tpercentage={ total.tpsTerprosesPercentage }\n\t\t\t\t\t\t\tcaption={ `${ formatNumber( total.tpsTerproses ) } / ${ formatNumber( total.totalKpu ) }` }\n\t\t\t\t\t\t\tprogress={ total.tpsTerprosesPercentage }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</Tooltip>\n\t\t\t),\n\t\t\taccessor: 'tpsTerprosesPercentage',\n\t\t\tCell: row => (\n\t\t\t\t<CellPercentage\n\t\t\t\t\tpercentage={ row.value }\n\t\t\t\t\tcaption={ `${ formatNumber( row.original.tpsTerproses ) } / ${ formatNumber( row.original.totalKpu ) }` }\n\t\t\t\t\tprogress={ row.value }\n\t\t\t\t/>\n\t\t\t),\n\t\t},\n\n\t\t//{\n\t\t\t//Header: () => (\n\t\t\t\t//<Tooltip content={ 'Jumlah suara sah' }>\n\t\t\t\t\t//<div className={ thColNumericClass }>\n\t\t\t\t\t\t//<Heading>{ 'Sah' }</Heading>\n\t\t\t\t\t\t//<CellNumber number={ total.sah } />\n\t\t\t\t\t//</div>\n\t\t\t\t//</Tooltip>\n\t\t\t//),\n\t\t\t//Footer: () => (\n\t\t\t\t//<Tooltip content={ 'Jumlah suara sah' }>\n\t\t\t\t\t//<div className={ thColNumericClass }>\n\t\t\t\t\t\t//<Heading>{ 'Sah' }</Heading>\n\t\t\t\t\t\t//<CellNumber number={ total.sah } />\n\t\t\t\t\t//</div>\n\t\t\t\t//</Tooltip>\n\t\t\t//),\n\t\t\t//accessor: 'sah',\n\t\t\t//Cell: row => (\n\t\t\t\t//<CellNumber number={ formatNumber( row.value ) } />\n\t\t\t//),\n\t\t\t//minWidth: 160,\n\t\t//},\n\n\t\t//{\n\t\t\t//Header: () => (\n\t\t\t\t//<Tooltip content={ 'Jumlah suara tidak sah' }>\n\t\t\t\t\t//<div className={ thColNumericClass }>\n\t\t\t\t\t\t//<Heading>{ 'Tidak Sah' }</Heading>\n\t\t\t\t\t\t//<CellNumber number={ total.tSah } />\n\t\t\t\t\t//</div>\n\t\t\t\t//</Tooltip>\n\t\t\t//),\n\t\t\t//Footer: () => (\n\t\t\t\t//<Tooltip content={ 'Jumlah suara tidak sah' }>\n\t\t\t\t\t//<div className={ thColNumericClass }>\n\t\t\t\t\t\t//<Heading>{ 'Tidak Sah' }</Heading>\n\t\t\t\t\t\t//<CellNumber number={ total.tSah } />\n\t\t\t\t\t//</div>\n\t\t\t\t//</Tooltip>\n\t\t\t//),\n\t\t\t//accessor: 'tSah',\n\t\t\t//Cell: row => (\n\t\t\t\t//<CellNumber number={ formatNumber( row.value ) } />\n\t\t\t//),\n\t\t\t//minWidth: 160,\n\t\t//},\n\n\t\t//{\n\t\t\t//Header: () => (\n\t\t\t\t//<Tooltip content={ 'Jumlah TPS total dari data KPU' }>\n\t\t\t\t\t//<div className={ thColNumericClass }>\n\t\t\t\t\t\t//<Heading>{ 'Total KPU' }</Heading>\n\t\t\t\t\t\t//<CellNumber number={ total.totalKpu } />\n\t\t\t\t\t//</div>\n\t\t\t\t//</Tooltip>\n\t\t\t//),\n\t\t\t//Footer: () => (\n\t\t\t\t//<Tooltip content={ 'Jumlah TPS total dari data KPU' }>\n\t\t\t\t\t//<div className={ thColNumericClass }>\n\t\t\t\t\t\t//<Heading>{ 'Total KPU' }</Heading>\n\t\t\t\t\t\t//<CellNumber number={ total.totalKpu } />\n\t\t\t\t\t//</div>\n\t\t\t\t//</Tooltip>\n\t\t\t//),\n\t\t\t//accessor: 'totalKpu',\n\t\t\t//Cell: row => (\n\t\t\t\t//<CellNumber number={ formatNumber( row.value ) } />\n\t\t\t//),\n\t\t\t//minWidth: 160,\n\t\t//},\n\n\t\t//{\n\t\t\t//Header: () => (\n\t\t\t\t//<Tooltip content={ 'Jumlah TPS dengan foto yang diterima KawalPemilu (termasuk lembar PHP, pileg, dpd, dll)' }>\n\t\t\t\t\t//<div className={ thColNumericClass }>\n\t\t\t\t\t\t//<Heading>{ 'Dgn Foto' }</Heading>\n\t\t\t\t\t\t//<CellPercentage\n\t\t\t\t\t\t\t//percentage={ total.cakupanPercentage }\n\t\t\t\t\t\t\t//caption={ `${ formatNumber( total.cakupan ) } / ${ formatNumber( total.totalKpu ) }` }\n\t\t\t\t\t\t///>\n\t\t\t\t\t//</div>\n\t\t\t\t//</Tooltip>\n\t\t\t//),\n\t\t\t//Footer: () => (\n\t\t\t\t//<Tooltip content={ 'Jumlah TPS dengan foto yang diterima KawalPemilu (termasuk lembar PHP, pileg, dpd, dll)' }>\n\t\t\t\t\t//<div className={ thColNumericClass }>\n\t\t\t\t\t\t//<Heading>{ 'Dgn Foto' }</Heading>\n\t\t\t\t\t\t//<CellPercentage\n\t\t\t\t\t\t\t//percentage={ total.cakupanPercentage }\n\t\t\t\t\t\t\t//caption={ `${ formatNumber( total.cakupan ) } / ${ formatNumber( total.totalKpu ) }` }\n\t\t\t\t\t\t///>\n\t\t\t\t\t//</div>\n\t\t\t\t//</Tooltip>\n\t\t\t//),\n\t\t\t//accessor: 'cakupanPercentage',\n\t\t\t//Cell: row => (\n\t\t\t\t//<CellPercentage\n\t\t\t\t\t//percentage={ row.value }\n\t\t\t\t\t//caption={ `${ formatNumber( row.original.cakupan ) } / ${ formatNumber( row.original.totalKpu ) }` }\n\t\t\t\t\t//progress={ row.value }\n\t\t\t\t///>\n\t\t\t//),\n\t\t\t//minWidth: 150,\n\t\t//},\n\n\t\t//{\n\t\t\t//Header: () => (\n\t\t\t\t//<Tooltip content={ 'Jumlah TPS yang memiliki foto yang belum diproses' }>\n\t\t\t\t\t//<div className={ thColNumericClass }>\n\t\t\t\t\t\t//<Heading>{ 'Belum Terproses' }</Heading>\n\t\t\t\t\t\t//<CellPercentage\n\t\t\t\t\t\t\t//percentage={ total.pendingPercentage }\n\t\t\t\t\t\t\t//caption={ `${ formatNumber( total.pending ) } / ${ formatNumber( total.cakupan ) }` }\n\t\t\t\t\t\t///>\n\t\t\t\t\t//</div>\n\t\t\t\t//</Tooltip>\n\t\t\t//),\n\t\t\t//Footer: () => (\n\t\t\t\t//<Tooltip content={ 'Jumlah TPS yang memiliki foto yang belum diproses' }>\n\t\t\t\t\t//<div className={ thColNumericClass }>\n\t\t\t\t\t\t//<Heading>{ 'Belum Terproses' }</Heading>\n\t\t\t\t\t\t//<CellPercentage\n\t\t\t\t\t\t\t//percentage={ total.pendingPercentage }\n\t\t\t\t\t\t\t//caption={ `${ formatNumber( total.pending ) } / ${ formatNumber( total.cakupan ) }` }\n\t\t\t\t\t\t///>\n\t\t\t\t\t//</div>\n\t\t\t\t//</Tooltip>\n\t\t\t//),\n\t\t\t//accessor: 'pending',\n\t\t\t//Cell: row => (\n\t\t\t\t//<CellPercentage\n\t\t\t\t\t//percentage={ row.original.pendingPercentage }\n\t\t\t\t\t//caption={ `${ formatNumber( row.value ) } / ${ formatNumber( row.original.cakupan ) }` }\n\t\t\t\t///>\n\t\t\t//),\n\t\t\t//minWidth: 190,\n\t\t//},\n\n\t\t//{\n\t\t\t//Header: () => (\n\t\t\t\t//<Tooltip content={ 'Jumlah TPS yang memiliki laporan yang belum ditindaklanjuti.' }>\n\t\t\t\t\t//<div className={ thColNumericClass }>\n\t\t\t\t\t\t//<Heading>{ 'Bermasalah' }</Heading>\n\t\t\t\t\t\t//<CellPercentage\n\t\t\t\t\t\t\t//percentage={ total.errorPercentage }\n\t\t\t\t\t\t\t//caption={ `${ formatNumber( total.error ) } / ${ formatNumber( total.cakupan ) }` }\n\t\t\t\t\t\t///>\n\t\t\t\t\t//</div>\n\t\t\t\t//</Tooltip>\n\t\t\t//),\n\t\t\t//Footer: () => (\n\t\t\t\t//<Tooltip content={ 'Jumlah TPS yang memiliki laporan yang belum ditindaklanjuti.' }>\n\t\t\t\t\t//<div className={ thColNumericClass }>\n\t\t\t\t\t\t//<Heading>{ 'Bermasalah' }</Heading>\n\t\t\t\t\t\t//<CellPercentage\n\t\t\t\t\t\t\t//percentage={ total.errorPercentage }\n\t\t\t\t\t\t\t//caption={ `${ formatNumber( total.error ) } / ${ formatNumber( total.cakupan ) }` }\n\t\t\t\t\t\t///>\n\t\t\t\t\t//</div>\n\t\t\t\t//</Tooltip>\n\t\t\t//),\n\t\t\t//accessor: 'error',\n\t\t\t//Cell: row => (\n\t\t\t\t//<CellPercentage\n\t\t\t\t\t//percentage={ row.original.errorPercentage }\n\t\t\t\t\t//caption={ `${ formatNumber( row.value ) } / ${ formatNumber( row.original.cakupan ) }` }\n\t\t\t\t///>\n\t\t\t//),\n\t\t\t//minWidth: 160,\n\t\t//},\n\t]\n}\n","import React from 'react'\n\nimport { partyKeys } from '../utils'\n\n// TODO: Move this to utils.\nconst tpsKeyLabels = Object.assign(\n\t{\n\t\tpas1: 'Jokowi-Amin',\n\t\tpas2: 'Prabowo-Sandi',\n\t\tsah: 'Sah',\n\t\tpSah: 'Sah',\n\t\ttSah: 'Tidak Sah',\n\t\tpTSah: 'Tidak Sah',\n\t\tjum: 'Pengguna Hak Pilih',\n\t},\n\t...partyKeys.map( ( [ key, label ] ) => (\n\t\t{ [ key ]: label }\n\t) )\n)\n\nexport default function TpsCountResult( { keys, data } ) {\n\tconst filteredKeys = keys.filter( key => ( typeof data[ key ] ) !== 'undefined' )\n\n\treturn (\n\t\t<table className=\"tps-detail-table\">\n\t\t\t<tbody>\n\t\t\t\t{ filteredKeys.map( key => (\n\t\t\t\t\t<tr key={ key }>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\t{ tpsKeyLabels[ key ] }\n\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td className=\"numeric\">\n\t\t\t\t\t\t\t{ data[ key ] }\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t) ) }\n\t\t\t</tbody>\n\t\t</table>\n\t)\n}\n","import React from 'react'\n\nimport TpsCount from './tps-count'\n\nexport default function TpsCountList( { dataType, data } ) {\n\tconst tables = 'pilpres' === dataType\n\t\t? [ [ 'pas1', 'pas2' ], [ 'sah', 'tSah', 'jum' ] ]\n\t\t: [\n\t\t\t[ 'pkb', 'ger', 'pdi', 'gol' ],\n\t\t\t[ 'nas', 'gar', 'ber', 'sej' ],\n\t\t\t[ 'per', 'ppp', 'psi', 'pan' ],\n\t\t\t[ 'han', 'dem', 'pa',  'ps'  ],\n\t\t\t[ 'pda', 'pna', 'pbb', 'pkp' ],\n\t\t]\n\n\treturn (\n\t\t<ul className=\"tps-cards\">\n\t\t\t{ tables.map( ( tableKeys, index ) => (\n\t\t\t\t<li\n\t\t\t\t\tkey={ `tps-count-summary-${ index }` }\n\t\t\t\t\tclassName=\"tps-card\"\n\t\t\t\t>\n\t\t\t\t\t<TpsCount\n\t\t\t\t\t\tkeys={ tableKeys }\n\t\t\t\t\t\tdata={ data }\n\t\t\t\t\t/>\n\t\t\t\t</li>\n\t\t\t) ) }\n\t\t</ul>\n\t)\n}\n","import React from 'react'\nimport { Caption, Link, Thumbnail } from '@shopify/polaris'\n\nimport { partyKeys } from '../utils'\nimport TpsCount from './tps-count'\n\n\nconst tpsPhotoDetail = ( data ) => {\n\tconst keys = data.type === 1\n\t? (\n\t\ttypeof data.jum !== 'undefined'\n\t\t\t? [ 'jum' ]\n\t\t\t: [ 'pas1', 'pas2', 'sah', 'tSah' ]\n\t)\n\t: (\n\t\ttypeof data.pSah !== 'undefined' && data.pTSah !== 'undefined'\n\t\t\t? [ 'pSah', 'pTSah' ]\n\t\t\t: partyKeys.map( ( [ party ] ) => party )\n\t)\n\n\treturn (\n\t\t<TpsCount\n\t\t\tkeys={ keys }\n\t\t\tdata={ data }\n\t\t/>\n\t)\n}\n\nexport default function TpsPhotos( { photos } ) {\n\treturn (\n\t\t<ul className=\"tps-cards\">\n\t\t\t{\n\t\t\t\tphotos.length ?\n\t\t\t\t\tphotos.map( photo => (\n\t\t\t\t\t\t<li key={ photo.url } className=\"tps-card\">\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\turl={ `${ photo.url }=s1280` }\n\t\t\t\t\t\t\t\texternal\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Thumbnail\n\t\t\t\t\t\t\t\t\tsource={ `${ photo.url }=s120` }\n\t\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t{ tpsPhotoDetail( photo ) }\n\t\t\t\t\t\t</li>\n\t\t\t\t\t) )\n\t\t\t\t\t:\n\t\t\t\t\t<Caption>Belum tersedia</Caption>\n\t\t\t}\n\t\t</ul>\n\t)\n}\n","import React from 'react'\nimport {\n\tButton,\n\tButtonGroup,\n\tCard,\n\tSubheading,\n} from '@shopify/polaris'\n\nimport {\n\tgetReportTpsUrl,\n\tgetModUrl,\n} from '../utils'\n\nimport TpsCountList from './tps-count-list'\nimport TpsPhotos from './tps-photos'\n\nexport default function TpsDetail( { row } ) {\n\tconst {\n\t\tid,\n\t\tlocationId,\n\t\tlocationName,\n\t\tparentNames,\n\t\tphotos,\n\t\tdataType\n\t} = row.original\n\n\tconst parentName = parentNames[ parentNames.length - 1 ] || ''\n\tconst reportUrl = getReportTpsUrl( locationId, id, dataType, parentName, locationName )\n\tconst modUrl = getModUrl( locationId, id )\n\n\treturn (\n\t\t<Card>\n\t\t\t<Card.Section>\n\t\t\t\t<ButtonGroup segmented>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ticon=\"alert\"\n\t\t\t\t\t\turl={ reportUrl }\n\t\t\t\t\t\texternal\n\t\t\t\t\t>\n\t\t\t\t\t\t{ 'Lapor kesalahan' }\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ticon=\"profile\"\n\t\t\t\t\t\turl={ modUrl }\n\t\t\t\t\t\texternal\n\t\t\t\t\t>\n\t\t\t\t\t\t{ 'Moderasi' }\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t</Card.Section>\n\n\t\t\t<Card.Section>\n\t\t\t\t<Subheading>{ `Hasil Perhitungan TPS ${ row.original.name }` }</Subheading>\n\t\t\t\t<TpsCountList\n\t\t\t\t\tdataType={ dataType }\n\t\t\t\t\tdata={ row.original }\n\t\t\t\t/>\n\t\t\t</Card.Section>\n\n\t\t\t<Card.Section>\n\t\t\t\t<Subheading>{ `Foto TPS ${ row.original.name }` }</Subheading>\n\t\t\t\t<TpsPhotos photos={ photos[ dataType ] } />\n\t\t\t</Card.Section>\n\t\t</Card>\n\t)\n}\n","import React, { Component } from 'react'\nimport { Card } from '@shopify/polaris'\n\nimport ReactTable from 'react-table'\nimport 'react-table/react-table.css'\n\nimport TopBar from './top-bar'\nimport {\n\tgetColumns,\n\tgetSkeletonColumns,\n} from './columns/'\nimport TpsDetail from './columns/tps-detail'\nimport {\n\tgetParents,\n\tgetTotalRows,\n\tisTpsData,\n\tprepareRows,\n} from './utils'\n\nimport './style.css'\n\nclass Table extends Component {\n\trender() {\n\t\tconst { dataType, apiResponse, loading } = this.props\n\t\tconst name = apiResponse ? apiResponse.name : ''\n\n\t\tconst rows = loading\n\t\t\t? [ ...Array( 20 ).keys() ].map( () => ( {} ) )\n\t\t\t: prepareRows( dataType, apiResponse )\n\n\t\tconst total = getTotalRows( rows )\n\t\tconst isTps = isTpsData( apiResponse )\n\n\t\tconst columns = loading\n\t\t\t? getSkeletonColumns( 4 )\n\t\t\t: getColumns( dataType, total, isTps )\n\n\t\tconst tpsExpanded = row => (\n\t\t\t<TpsDetail row={ row } />\n\t\t)\n\n\t\treturn (\n\t\t\t<Card>\n\t\t\t\t<Card.Section>\n\t\t\t\t\t<TopBar\n\t\t\t\t\t\tdataType={ dataType }\n\t\t\t\t\t\tparents={ getParents( dataType, apiResponse ) }\n\t\t\t\t\t\tloading={ loading }\n\t\t\t\t\t\tname={ name }\n\t\t\t\t\t/>\n\t\t\t\t</Card.Section>\n\n\t\t\t\t<ReactTable\n\t\t\t\t\tdata={ rows }\n\t\t\t\t\tcolumns={ columns }\n\t\t\t\t\tclassName=\"-striped -highlight\"\n\t\t\t\t\tshowPagination={ false }\n\t\t\t\t\tpageSize={ rows.length }\n\t\t\t\t\tstyle={ {\n\t\t\t\t\t\tmaxHeight: \"1600px\"\n\t\t\t\t\t} }\n\t\t\t\t\tSubComponent={ isTps && ! loading\n\t\t\t\t\t\t? tpsExpanded\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</Card>\n\t\t)\n\t}\n}\n\nexport default Table\n","import React, { Component } from 'react'\n\nimport {\n\tAppProvider,\n\tButton,\n\tButtonGroup,\n\tCard,\n\tLayout,\n\tPage,\n} from '@shopify/polaris'\nimport Table from '../Table'\n\nconst apiUrl = 'https://kawal-c1.appspot.com/api/c/'\n\nconst Wrapper = props => {\n\treturn (\n\t\t<AppProvider>\n\t\t\t<Page>\n\t\t\t\t<Layout>\n\t\t\t\t\t<Layout.Section>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t{ props.children }\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Layout.Section>\n\t\t\t\t</Layout>\n\t\t\t</Page>\n\t\t</AppProvider>\n\t)\n}\n\nclass App extends Component {\n\tconstructor( props ) {\n\t\tsuper( props )\n\n\t\tthis.state = {\n\t\t\tdataType: this.props.dataType || 'pilpres',\n\t\t\tid: this.props.id || 0,\n\t\t\tapiResponse: null,\n\t\t\tloading: true,\n\t\t\terror: false,\n\t\t}\n\n\t\tthis.onHashChange = this.onHashChange.bind( this )\n\t}\n\n\tonHashChange() {\n\t\tconst path = this.props.hashToState()\n\t\tconst { dataType, id } = path\n\t\tthis.setState( { dataType, id } )\n\t\tthis.fetchData()\n\t}\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener( 'hashchange', this.onHashChange, false )\n\t\tthis.fetchData()\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener( 'hashchange', this.onHashChange, false )\n\t}\n\n\tfetchData() {\n\t\tthis.setState( { loading: true } )\n\n\t\tfetch( apiUrl + this.state.id + `?=${ new Date().getTime() }` )\n\t\t\t.then( response => response.json() )\n\t\t\t.then( apiResponse => this.setState( { apiResponse, loading: false } ) )\n\t\t\t.catch( error => this.setState( { error, loading: false } ) )\n\t}\n\n\trender() {\n\t\tconst { dataType, id, loading, apiResponse } = this.state\n\n\t\treturn (\n\t\t\t<Wrapper>\n\t\t\t\t<ButtonGroup fullWidth segmented>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\tdisabled={ dataType === 'pilpres' }\n\t\t\t\t\t\turl={ `#pilpres:${ id }` }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ 'Presiden' }\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\tdisabled={ dataType === 'pileg' }\n\t\t\t\t\t\turl={ `#pileg:${ id }` }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ 'DPR' }\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\n\t\t\t\t<Table\n\t\t\t\t\tloading={ loading }\n\t\t\t\t\tapiResponse={ apiResponse }\n\t\t\t\t\tdataType={ dataType }\n\t\t\t\t/>\n\t\t\t</Wrapper>\n\t\t)\n\t}\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nimport '@shopify/polaris/styles.css';\n\n/**\n * Helper function to get state object given current hash.\n *\n * @returns {Object} State.\n */\nfunction hashToState() {\n\tconst hash = window.location.hash.length > 0\n\t\t? window.location.hash.substring( 1 )\n\t\t: '';\n\n\tlet [ dataType, id ] = hash.split( ':' )\n\tif ( dataType !== 'pilpres' && dataType !== 'pileg' ) {\n\t\tdataType = 'pilpres';\n\t}\n\n\tid = parseInt( id, 10 );\n\tif ( isNaN( id ) ) {\n\t\tid = 0;\n\t}\n\n\treturn {\n\t\tdataType,\n\t\tid\n\t}\n}\n\nconst { dataType, id } = hashToState()\nwindow.history.replaceState(\n\t{},\n\tdocument.title,\n\t`${ window.location.pathname }#${ dataType }:${ id }`\n);\n\nReactDOM.render(\n\t<App hashToState={ hashToState } dataType={ dataType } id={ id } />,\n\tdocument.getElementById( 'root' )\n)\n"],"sourceRoot":""}